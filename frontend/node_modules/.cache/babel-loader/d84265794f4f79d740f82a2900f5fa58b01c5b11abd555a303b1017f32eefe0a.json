{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from 'echarts';\nexport default {\n  name: \"ScatterPlot\",\n  data() {\n    return {};\n  },\n  mounted() {\n    this.getData();\n  },\n  methods: {\n    getData() {\n      /**\n       * 散点图用的是二维数组\n       */\n      let dataArr = [{\n        ender: 'female',\n        height: '180.3',\n        weight: 83.2\n      }, {\n        ender: 'male',\n        height: '168',\n        weight: 200\n      }, {\n        ender: 'male',\n        height: '174',\n        weight: 110\n      }, {\n        ender: 'female',\n        height: '166',\n        weight: 153\n      }, {\n        ender: 'male',\n        height: '205',\n        weight: 142\n      }, {\n        ender: 'male',\n        height: '23.3',\n        weight: 189\n      }, {\n        ender: 'female',\n        height: '170',\n        weight: 188\n      }, {\n        ender: 'female',\n        height: '130.3',\n        weight: 83.2\n      }, {\n        ender: 'male',\n        height: '145',\n        weight: 300\n      }, {\n        ender: 'male',\n        height: '179',\n        weight: 120\n      }, {\n        ender: 'female',\n        height: '166',\n        weight: 113\n      }, {\n        ender: 'male',\n        height: '45',\n        weight: 234\n      }, {\n        ender: 'male',\n        height: '159.3',\n        weight: 80\n      }, {\n        ender: 'female',\n        height: '170',\n        weight: 128\n      }, {\n        ender: 'female',\n        height: '156',\n        weight: 55\n      }, {\n        ender: 'male',\n        height: '165',\n        weight: 346\n      }, {\n        ender: 'male',\n        height: '136.3',\n        weight: 120\n      }, {\n        ender: 'female',\n        height: '100',\n        weight: 86\n      }, {\n        ender: 'female',\n        height: '145.3',\n        weight: 83.2\n      }, {\n        ender: 'male',\n        height: '162',\n        weight: 95\n      }];\n      let axisData = [];\n      // 把一维数组变成二维数组\n      for (let i = 0; i < dataArr.length; i++) {\n        const el = dataArr[i];\n        let height = el.height;\n        let weight = el.weight;\n        let newArr = [height, weight];\n        axisData.push(newArr);\n      }\n      let myChart = this.$echarts.init(document.getElementById('myChart'));\n      let option = {\n        xAxis: {\n          type: 'value'\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          // symbolSize: 10, //散点固定大小\n          symbolSize: arg => {\n            let height = arg[0] / 100;\n            let weight = arg[1];\n            //bmi =体重/(身高*身高)>28为肥胖\n            let bmi = weight / (height * height);\n            return bmi > 28 ? 10 : 5;\n          },\n          itemStyle: {\n            // color: 'green',\n            color: arg => {\n              let height = arg.data[0] / 100;\n              let weight = arg.data[1];\n              //bmi =体重/(身高*身高)>28为肥胖\n              let bmi = weight / (height * height);\n              return bmi > 28 ? 'red' : 'green';\n            }\n          },\n          data: axisData,\n          type: 'effectScatter',\n          //散点图 scatter,涟漪动画,effectScatter\n          // 涟漪动画大小\n          rippleEffect: {\n            scale: 10\n          },\n          showEffectOn: 'render' //涟漪动画出现效果,render:加载出来就有效果, emphasis:鼠标滑过才有效果\n        }]\n      };\n\n      myChart.setOption(option);\n    }\n  }\n};","map":{"version":3,"mappings":";AASA;AACA;EACAA;EACAC;IAAA,QACA;EAAA;EACAC;IACA;EACA;EACAC;IACAC;MACA;AACA;AACA;MACA,eACA;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,EACA;MACA;MACA;MACA;QACA;QACA;QACA;QACA;QACAC;MACA;MACA;MACA;QACAC;UAAAC;QAAA;QACAC;UAAAD;QAAA;QACAE,SACA;UACA;UACAC;YACA;YACA;YACA;YACA;YACA;UACA;UACAC;YACA;YACAC;cACA;cACA;cACA;cACA;cACA;YACA;UACA;UACAd;UACAS;UAAA;UACA;UACAM;YACAC;UACA;UACAC;QACA;MAEA;;MACAC;IACA;EACA;AACA","names":["name","data","mounted","methods","getData","ender","height","weight","axisData","xAxis","type","yAxis","series","symbolSize","itemStyle","color","rippleEffect","scale","showEffectOn","myChart"],"sourceRoot":"src/components","sources":["ScatterPlot.vue"],"sourcesContent":["<template>\n  <div style=\"height: 90vh\">\n    <div id='myScatterPlot' style=\"height: inherit\">\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport * as echarts from 'echarts'\nexport default {\n  name: \"ScatterPlot\",\n  data() {return{\n  }},\n  mounted() {\n    this.getData()\n  },\n  methods: {\n    getData() {\n      /**\n       * 散点图用的是二维数组\n       */\n      let dataArr = [\n        { ender: 'female', height: '180.3', weight: 83.2 },\n        { ender: 'male', height: '168', weight: 200 },\n        { ender: 'male', height: '174', weight: 110 },\n        { ender: 'female', height: '166', weight: 153 },\n        { ender: 'male', height: '205', weight: 142 },\n        { ender: 'male', height: '23.3', weight: 189 },\n        { ender: 'female', height: '170', weight: 188 },\n        { ender: 'female', height: '130.3', weight: 83.2 },\n        { ender: 'male', height: '145', weight: 300 },\n        { ender: 'male', height: '179', weight: 120 },\n        { ender: 'female', height: '166', weight: 113 },\n        { ender: 'male', height: '45', weight: 234 },\n        { ender: 'male', height: '159.3', weight: 80 },\n        { ender: 'female', height: '170', weight: 128 },\n        { ender: 'female', height: '156', weight: 55 },\n        { ender: 'male', height: '165', weight: 346 },\n        { ender: 'male', height: '136.3', weight: 120 },\n        { ender: 'female', height: '100', weight: 86 },\n        { ender: 'female', height: '145.3', weight: 83.2 },\n        { ender: 'male', height: '162', weight: 95 },\n      ]\n      let axisData = []\n      // 把一维数组变成二维数组\n      for (let i = 0; i < dataArr.length; i++) {\n        const el = dataArr[i]\n        let height = el.height\n        let weight = el.weight\n        let newArr = [height, weight]\n        axisData.push(newArr)\n      }\n      let myChart = this.$echarts.init(document.getElementById('myChart'))\n      let option = {\n        xAxis: { type: 'value' },\n        yAxis: { type: 'value' },\n        series: [\n          {\n            // symbolSize: 10, //散点固定大小\n            symbolSize: (arg) => {\n              let height = arg[0] / 100\n              let weight = arg[1]\n              //bmi =体重/(身高*身高)>28为肥胖\n              let bmi = weight / (height * height)\n              return bmi > 28 ? 10 : 5\n            },\n            itemStyle: {\n              // color: 'green',\n              color: (arg) => {\n                let height = arg.data[0] / 100\n                let weight = arg.data[1]\n                //bmi =体重/(身高*身高)>28为肥胖\n                let bmi = weight / (height * height)\n                return bmi > 28 ? 'red' : 'green'\n              },\n            },\n            data: axisData,\n            type: 'effectScatter', //散点图 scatter,涟漪动画,effectScatter\n            // 涟漪动画大小\n            rippleEffect: {\n              scale: 10,\n            },\n            showEffectOn: 'render', //涟漪动画出现效果,render:加载出来就有效果, emphasis:鼠标滑过才有效果\n          },\n        ],\n      }\n      myChart.setOption(option)\n    },\n  },\n}\n\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}