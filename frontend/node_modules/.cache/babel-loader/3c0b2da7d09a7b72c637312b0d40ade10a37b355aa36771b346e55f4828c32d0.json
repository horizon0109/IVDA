{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"ScatterPlot\",\n  data() {\n    return {};\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      // req URL to retrieve companies from backend\n      var reqUrl = 'http://127.0.0.1:5000/companies';\n      console.log(\"ReqURL \" + reqUrl);\n      // await response and data\n      const response = await fetch(reqUrl);\n      const responseData = await response.json();\n      // transform data to usable by scatterplot\n      responseData.forEach(company => {\n        this.ScatterPlotData.x.push(company.employees);\n        this.ScatterPlotData.y.push(company.founding_year);\n      });\n      // after the data is loaded, draw the plot\n\n      this.drawScatterPlot();\n    },\n    drawScatterPlot() {\n      let domDiv = this.$refs.ScatterPlot;\n      let myScatterPlot = this.$echarts.init(domDiv);\n      let option = {\n        xAxis: {},\n        yAxis: {},\n        series: [{\n          symbolSize: 20,\n          data: [[10.0, 8.04], [8.07, 6.95], [13.0, 7.58], [9.05, 8.81], [11.0, 8.33], [14.0, 7.66], [13.4, 6.81], [10.0, 6.33], [14.0, 8.96], [12.5, 6.82], [9.15, 7.2], [11.5, 7.2], [3.03, 4.23], [12.2, 7.83], [2.02, 4.47], [1.05, 3.33], [4.05, 4.96], [6.03, 7.24], [12.0, 6.26], [12.0, 8.84], [7.08, 5.82], [5.02, 5.68]],\n          type: 'scatter'\n        }]\n      };\n      myScatterPlot.setOption(option);\n    }\n  }\n};","map":{"version":3,"mappings":";AASA;EACAA;EACAC;IAAA,QACA;EAAA;EACAC;IACA;EACA;EACAC;IACA;MACA;MACA;MACAC;MACA;MACA;MACA;MACA;MACAC;QACA;QACA;MACA;MACA;;MAEA;IACA;IACAC;MACA;MACA;MACA;QACAC;QACAC;QACAC,SACA;UACAC;UACAT,OACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA;UACAU;QACA;MAEA;MACAC;IACA;EACA;AACA","names":["name","data","mounted","methods","console","responseData","drawScatterPlot","xAxis","yAxis","series","symbolSize","type","myScatterPlot"],"sourceRoot":"src/components","sources":["ScatterPlot.vue"],"sourcesContent":["<template>\n  <div style=\"height: 90vh\">\n    <div ref='ScatterPlot' style=\"height: inherit\">\n    </div>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  name: \"ScatterPlot\",\n  data() {return{\n  }},\n  mounted() {\n    this.fetchData()\n  },\n  methods: {\n    async fetchData(){\n      // req URL to retrieve companies from backend\n      var reqUrl = 'http://127.0.0.1:5000/companies'\n      console.log(\"ReqURL \" + reqUrl)\n      // await response and data\n      const response = await fetch(reqUrl)\n      const responseData = await response.json();\n      // transform data to usable by scatterplot\n      responseData.forEach((company) => {\n        this.ScatterPlotData.x.push(company.employees)\n        this.ScatterPlotData.y.push(company.founding_year)\n      })\n      // after the data is loaded, draw the plot\n\n      this.drawScatterPlot()\n    },\n    drawScatterPlot(){\n      let domDiv = this.$refs.ScatterPlot\n      let myScatterPlot = this.$echarts.init(domDiv)\n      let option = {\n        xAxis: {},\n        yAxis: {},\n        series: [\n          {\n            symbolSize: 20,\n            data: [\n              [10.0, 8.04],\n              [8.07, 6.95],\n              [13.0, 7.58],\n              [9.05, 8.81],\n              [11.0, 8.33],\n              [14.0, 7.66],\n              [13.4, 6.81],\n              [10.0, 6.33],\n              [14.0, 8.96],\n              [12.5, 6.82],\n              [9.15, 7.2],\n              [11.5, 7.2],\n              [3.03, 4.23],\n              [12.2, 7.83],\n              [2.02, 4.47],\n              [1.05, 3.33],\n              [4.05, 4.96],\n              [6.03, 7.24],\n              [12.0, 6.26],\n              [12.0, 8.84],\n              [7.08, 5.82],\n              [5.02, 5.68]\n            ],\n            type: 'scatter'\n          }\n        ]\n      }\n      myScatterPlot.setOption(option)\n    }\n  }\n}\n\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}