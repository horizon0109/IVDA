{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { myEcharts } from '../util/util';\nimport axios from 'axios';\nexport default {\n  name: 'MapPlot',\n  components: {},\n  data() {\n    return {\n      address: [{\n        label: 'Alabama',\n        value: 'AL'\n      }, {\n        label: 'Alaska',\n        value: 'AK'\n      }, {\n        label: 'Arizona',\n        value: 'AZ'\n      }, {\n        label: 'Arkansas',\n        value: 'AR'\n      }, {\n        label: 'California',\n        value: 'CA'\n      }, {\n        label: 'Colorado',\n        value: 'CO'\n      }, {\n        label: 'Connecticut',\n        value: 'CT'\n      }, {\n        label: 'Delaware',\n        value: 'DE'\n      }, {\n        label: 'District of Columbia',\n        value: '\tDC'\n      }, {\n        label: 'Florida',\n        value: 'FL'\n      }, {\n        label: 'Georgia',\n        value: 'GA'\n      }, {\n        label: 'Hawaii',\n        value: 'HI'\n      }, {\n        label: 'Idaho',\n        value: 'ID'\n      }, {\n        label: 'Illinois',\n        value: 'IL'\n      }, {\n        label: 'Indiana',\n        value: 'IN'\n      }, {\n        label: 'Iowa',\n        value: 'IA'\n      }, {\n        label: 'Kansas',\n        value: 'KS'\n      }, {\n        label: 'Kentucky',\n        value: 'KY'\n      }, {\n        label: 'Louisiana',\n        value: 'LA'\n      }, {\n        label: 'Maine',\n        value: 'ME'\n      },\n      // { label: 'Maine', value: 'ME'},\n      {\n        label: 'Maryland',\n        value: 'MD'\n      }, {\n        label: 'Massachusetts',\n        value: 'MA'\n      }, {\n        label: 'Michigan',\n        value: 'MI'\n      }, {\n        label: 'Minnesota',\n        value: 'MN'\n      }, {\n        label: 'Mississippi',\n        value: 'MS'\n      }, {\n        label: 'Missouri',\n        value: 'MO'\n      }, {\n        label: 'Montana',\n        value: 'MT'\n      }, {\n        label: 'Nebraska',\n        value: 'NE'\n      }, {\n        label: 'Nevada',\n        value: 'NV'\n      }, {\n        label: 'New Hampshire',\n        value: 'NH'\n      }, {\n        label: 'New Jersey',\n        value: 'NJ'\n      }, {\n        label: 'New Mexico',\n        value: 'NM'\n      }, {\n        label: 'New York',\n        value: 'NY'\n      }, {\n        label: 'North Carolina',\n        value: 'NC'\n      }, {\n        label: 'North Dakota',\n        value: 'ND'\n      }, {\n        label: 'Ohio',\n        value: 'OH'\n      }, {\n        label: 'Oklahoma',\n        value: 'OK'\n      }, {\n        label: 'Oregon',\n        value: 'OR'\n      }, {\n        label: 'Pennsylvania',\n        value: 'PA'\n      }, {\n        label: 'Puerto Rico',\n        value: 'PR'\n      }, {\n        label: 'Rhode Island',\n        value: 'RI'\n      }, {\n        label: 'South Carolina',\n        value: 'SC'\n      }, {\n        label: 'South Dakota',\n        value: 'SD'\n      }, {\n        label: 'Tennessee',\n        value: 'TN'\n      }, {\n        label: 'Texas',\n        value: 'TX'\n      }, {\n        label: 'Utah',\n        value: 'UT'\n      }, {\n        label: 'Vermont',\n        value: 'VT'\n      }, {\n        label: 'Virginia',\n        value: 'VA'\n      }, {\n        label: 'Washington',\n        value: 'WA'\n      }, {\n        label: 'West Virginia',\n        value: 'WV'\n      }, {\n        label: 'Wisconsin',\n        value: 'WI'\n      }, {\n        label: 'Wyoming',\n        value: 'WY'\n      }],\n      list: [],\n      headList: [],\n      sharch: ''\n    };\n  },\n  mounted() {\n    this.getList();\n  },\n  methods: {\n    getData() {\n      axios({\n        method: 'POST',\n        url: 'http://127.0.0.1:5000',\n        data: {\n          sharch: this.sharch\n        }\n      }).then(res => {\n        this.list = [];\n        res.data.forEach(el => {\n          this.address.forEach(els => {\n            if (els.value === el.address) {\n              this.list.push({\n                name: els.label,\n                value: el.key.toFixed(2)\n              });\n            }\n          });\n        });\n        myEcharts('char', this.list, this.sharch);\n        // console.log(this.list)\n      });\n    },\n\n    changeFun() {\n      this.getData();\n    },\n    getList() {\n      axios({\n        method: 'get',\n        url: 'http://127.0.0.1:5000/list'\n      }).then(res => {\n        // let l = 5\n        res.data.shift();\n        this.headList = [];\n        res.data.forEach((el, index) => {\n          let obj = {\n            label: el,\n            value: el\n          };\n          this.headList.push(obj);\n          if (index === 0) {\n            this.sharch = el;\n          }\n        });\n        this.getData();\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAoBA;AACA;AACA;EACAA;EACAC,aACA;EACAC;IACA;MACAC,UACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GAEA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA;MAEA;MACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GAEA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GAEA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EAGA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;EACA;EACAC;IACAC;MACAC;QACAC;QACAC;QACAZ;UACAM;QACA;MACA;QACA;QACAO;UACA;YACA;cACA;gBACAf;gBACAK;cACA;YACA;UACA;QACA;QACAW;QACA;MACA;IACA;;IAEAC;MACA;IACA;IACAC;MACAN;QACAC;QACAC;MACA;QACA;QACAC;QACA;QACAA;UACA;YACAX;YACAC;UACA;UACA;UACA;YACA;UACA;QAEA;QACA;MACA;IACA;EACA;AACA","names":["name","components","data","address","label","value","list","headList","sharch","mounted","methods","getData","axios","method","url","res","myEcharts","changeFun","getList"],"sourceRoot":"src/components","sources":["MapPlot.vue"],"sourcesContent":["<template>\n  <div id=\"MapPlot\">\n    <div class=\"item\">\n      <div id=\"char\"></div>\n      <!--      <div id=\"line\"></div>-->\n      <div class=\"search\">\n        <el-select @change=\"changeFun\" v-model=\"sharch\" placeholder=\"Please select:\">\n          <el-option\n              v-for=\"item in headList\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\">\n          </el-option>\n        </el-select>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {myEcharts} from '../util/util'\nimport axios from 'axios'\nexport default {\n  name: 'MapPlot',\n  components: {\n  },\n  data() {\n    return {\n      address:[\n        { label: 'Alabama', value: 'AL'},\n        { label: 'Alaska', value: 'AK'},\n        { label: 'Arizona', value: 'AZ'},\n        { label: 'Arkansas', value: 'AR'},\n        { label: 'California', value: 'CA'},\n        { label: 'Colorado', value: 'CO'},\n        { label: 'Connecticut', value: 'CT'},\n        { label: 'Delaware', value: 'DE'},\n        { label: 'District of Columbia', value: '\tDC'},\n        { label: 'Florida', value: 'FL'},\n        { label: 'Georgia', value: 'GA'},\n        { label: 'Hawaii', value: 'HI'},\n        { label: 'Idaho', value: 'ID'},\n        { label: 'Illinois', value: 'IL'},\n\n        { label: 'Indiana', value: 'IN'},\n        { label: 'Iowa', value: 'IA'},\n        { label: 'Kansas', value: 'KS'},\n        { label: 'Kentucky', value: 'KY'},\n        { label: 'Louisiana', value: 'LA'},\n        { label: 'Maine', value: 'ME'},\n\n        // { label: 'Maine', value: 'ME'},\n        { label: 'Maryland', value: 'MD'},\n        { label: 'Massachusetts', value: 'MA'},\n        { label: 'Michigan', value: 'MI'},\n        { label: 'Minnesota', value: 'MN'},\n        { label: 'Mississippi', value: 'MS'},\n        { label: 'Missouri', value: 'MO'},\n        { label: 'Montana', value: 'MT'},\n        { label: 'Nebraska', value: 'NE'},\n        { label: 'Nevada', value: 'NV'},\n\n        { label: 'New Hampshire', value: 'NH'},\n        { label: 'New Jersey', value: 'NJ'},\n        { label: 'New Mexico', value: 'NM'},\n        { label: 'New York', value: 'NY'},\n        { label: 'North Carolina', value: 'NC'},\n        { label: 'North Dakota', value: 'ND'},\n        { label: 'Ohio', value: 'OH'},\n        { label: 'Oklahoma', value: 'OK'},\n        { label: 'Oregon', value: 'OR'},\n        { label: 'Pennsylvania', value: 'PA'},\n        { label: 'Puerto Rico', value: 'PR'},\n\n        { label: 'Rhode Island', value: 'RI'},\n        { label: 'South Carolina', value: 'SC'},\n        { label: 'South Dakota', value: 'SD'},\n        { label: 'Tennessee', value: 'TN'},\n        { label: 'Texas', value: 'TX'},\n        { label: 'Utah', value: 'UT'},\n        { label: 'Vermont', value: 'VT'},\n        { label: 'Virginia', value: 'VA'},\n        { label: 'Washington', value: 'WA'},\n        { label: 'West Virginia', value: 'WV'},\n        { label: 'Wisconsin', value: 'WI'},\n        { label: 'Wyoming', value: 'WY'},\n\n\n      ],\n      list: [],\n      headList: [],\n      sharch: ''\n    }\n  },\n  mounted() {\n    this.getList()\n  },\n  methods: {\n    getData() {\n      axios({\n        method: 'POST',\n        url: 'http://127.0.0.1:5000',\n        data: {\n          sharch: this.sharch\n        }\n      }).then(res => {\n        this.list = []\n        res.data.forEach(el => {\n          this.address.forEach(els => {\n            if(els.value === el.address) {\n              this.list.push({\n                name: els.label,\n                value: el.key.toFixed(2)\n              })\n            }\n          })\n        })\n        myEcharts('char',this.list, this.sharch)\n        // console.log(this.list)\n      })\n    },\n\n    changeFun() {\n      this.getData()\n    },\n    getList() {\n      axios({\n        method: 'get',\n        url: 'http://127.0.0.1:5000/list',\n      }).then(res => {\n        // let l = 5\n        res.data.shift()\n        this.headList = []\n        res.data.forEach((el,index) => {\n          let obj = {\n            label: el,\n            value: el\n          }\n          this.headList.push(obj)\n          if(index === 0) {\n            this.sharch = el\n          }\n\n        })\n        this.getData()\n      })\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  display: flex;\n  justify-content: center;\n\n}\n\n.item {\n  width: 800px;\n  position: relative;\n}\n\n#char {\n  width: 100%;\n  height: 600px;\n}\n\n.search {\n  position: absolute;\n  top: 0;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}